openapi: 3.0.0
info:
  title: 游닄 Books & Authors API
  version: "1.0.0"
  description: |
    API RESTful para gerenciamento de livros e autores.
    
    - CRUD completo para livros e autores
    - Relacionamento entre livros e autores (populate)
    - Pagina칞칚o, filtros e ordena칞칚o
    - Tratamento de erros padronizado
    - Documenta칞칚o interativa via Swagger UI
  contact:
    name: Flavio Kolenez
    url: https://github.com/flavio-kolenez
servers:
  - url: http://localhost:3000
    description: Servidor local

components:
  schemas:
    Author:
      type: object
      required:
        - name
        - nationality
      properties:
        _id:
          type: string
          example: 60c72b2f9b1e8e001c8e4b8a
        name:
          type: string
          example: JK Rolling
        nationality:
          type: string
          example: USA
    Book:
      type: object
      required:
        - title
        - author
        - publisher
        - pagesNumber
      properties:
        _id:
          type: string
          example: 60c72b2f9b1e8e001c8e4b8b
        title:
          type: string
          example: Harry Potter
        author:
          $ref: '#/components/schemas/Author'
        publisher:
          type: string
          example: Bloomsbury
        pagesNumber:
          type: integer
          example: 400

paths:
  /authors:
    get:
      summary: Lista todos os autores
      tags: [Authors]
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Quantidade de autores por p치gina
        - in: query
          name: pages
          schema:
            type: integer
            default: 1
          description: P치gina atual
        - in: query
          name: sortBy
          schema:
            type: string
            default: name:1
          description: Campo para ordena칞칚o (ex: name:1 ou name:-1)
      responses:
        '200':
          description: Lista de autores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      summary: Cria um novo autor
      tags: [Authors]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Autor criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'

  /authors/{id}:
    get:
      summary: Busca um autor por ID
      tags: [Authors]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Autor encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        '404':
          description: Autor n칚o encontrado
    put:
      summary: Atualiza um autor por ID
      tags: [Authors]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Autor atualizado com sucesso
    delete:
      summary: Remove um autor por ID
      tags: [Authors]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Autor removido com sucesso

  /books:
    get:
      summary: Lista todos os livros
      tags: [Books]
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Quantidade de livros por p치gina
        - in: query
          name: pages
          schema:
            type: integer
            default: 1
          description: P치gina atual
        - in: query
          name: sortBy
          schema:
            type: string
            default: title:1
          description: Campo para ordena칞칚o (ex: title:1 ou title:-1)
        - in: query
          name: publisher
          schema:
            type: string
          description: Filtrar por editora
        - in: query
          name: title
          schema:
            type: string
          description: Filtrar por t칤tulo (busca parcial)
        - in: query
          name: authorName
          schema:
            type: string
          description: Filtrar por nome do autor
        - in: query
          name: minPages
          schema:
            type: integer
          description: N칰mero m칤nimo de p치ginas
        - in: query
          name: maxPages
          schema:
            type: integer
          description: N칰mero m치ximo de p치ginas
      responses:
        '200':
          description: Lista de livros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Cria um novo livro
      tags: [Books]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Livro criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /books/{id}:
    get:
      summary: Busca um livro por ID
      tags: [Books]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Livro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Livro n칚o encontrado
    put:
      summary: Atualiza um livro por ID
      tags: [Books]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Livro atualizado com sucesso
    delete:
      summary: Remove um livro por ID
      tags: [Books]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Livro removido com sucesso
